{% autoescape false %}
<?php

declare(strict_types=1);

namespace {{ namespace }};

use Wise\Core\Api\Attributes\OpenApi\EndpointElement as OA;
use Wise\Core\Api\Dto\Attributes\FieldEntityMapping;
use Wise\Core\Api\Fields\FieldHandlingEnum;
use Wise\Core\ApiAdmin\Dto\CommonAdminApiDto;
use Wise\Core\ApiAdmin\Dto\CommonDateInsertUpdateDtoTrait;

class {{ className }} extends CommonAdminApiDto
{
    use CommonDateInsertUpdateDtoTrait;

    #[OA\Property(
        description: 'Id identyfikujące w ERP',
        example: 'CONTRACT-123',
    )]
    #[FieldEntityMapping('idExternal')]
    protected ?string $id = null;

    #[OA\Property(
        description: 'ID wewnętrzne systemu B2B.',
        example: 1,
    )]
    #[FieldEntityMapping('id')]
    protected ?int $internalId = null;

    {% if fields is not null and fields is not empty %}
    {% for field in fields %}

    #[OA\Property(
        description: '{{ field.description is not null ? field.description : '' }}',
        example: {{
field.type == 'string' ? "'example'" :
(field.type == 'int' ? 1 :
(field.type == 'float' ? 1.1 :
(field.type == 'bool' ? 'true' : 'null')))
}},
    )]
    protected {{ field.allowNull ? '?' : '' }}{{ field.type }} ${{ field.name }}{{
field.allowNull ? ' = null' : ''
}};

    {% endfor %}

    {% for field in fields %}

    public function get{{ field.nameU }}(): {{ field.allowNull ? '?' : '' }}{{ field.type }}
    {
        return $this->{{ field.name }};
    }

    public function set{{ field.nameU }}({{ field.allowNull ? '?' : '' }}{{ field.type }} ${{ field.name }}): self
    {
        $this->{{ field.name }} = ${{ field.name }};

        return $this;
    }

{% endfor %}
{% endif %}

    public function getId(): string
    {
       return $this->id;
    }

    public function setId(string $id): self
    {
        $this->id = $id;

        return $this;
    }

    public function getInternalId(): int
    {
        return $this->internalId;
    }

    public function setInternalId(int $internalId): self
    {
        $this->internalId = $internalId;

        return $this;
    }
}

{% endautoescape %}
